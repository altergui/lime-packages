#!/usr/bin/lua

--! ### Example output generated by this script
--! ###### host/measurement-instance/type-type_instance N:1234 ######
--! PUTVAL cpe210/wifi_station_signal_dbm-wlan0-ap/gauge-1A:8C:8D:93:34:A8 N:-67
--! PUTVAL cpe210/wifi_station_expected_throughput_kilobits_per_second-wlan0-ap/gauge-1A:8C:8D:93:34:A8 N:11437
--! PUTVAL cpe210/wifi_station_inactive_milliseconds-wlan0-ap/gauge-1A:8C:8D:93:34:A8 N:2040
--! PUTVAL cpe210/wifi_station_transmit_kilobits_per_second-wlan0-ap/gauge-1A:8C:8D:93:34:A8 N:58500
--! PUTVAL cpe210/wifi_station_receive_kilobits_per_second-wlan0-ap/gauge-1A:8C:8D:93:34:A8 N:1000

local libuci = require("uci")

local uci = libuci.cursor()

local hostname
uci:foreach("system", "system", function(s) hostname = uci:get("system", s[".name"], "hostname") end)

local ubus = require "ubus"
local iwinfo = require "iwinfo"

local function metric(name, mtype, ifname, mac, value)
  local outputter = function(ifname, mac, value)
    print(
      "PUTVAL"..
      " "..hostname.."/"..name.."-"..ifname.."/"..mtype.."-"..mac..
      " N:"..value
    )
  end
  if value then
    outputter(ifname, mac, value)
  end
  return outputter
end

local function scrape()
  local metric_wifi_stations = metric("wifi_stations", "gauge")

  local metric_wifi_station_signal = metric("wifi_station_signal_dbm","gauge")

  local metric_wifi_station_inactive = metric('wifi_station_inactive_milliseconds', 'gauge')

  local metric_wifi_station_exp_thr = metric('wifi_station_expected_throughput_kilobits_per_second', 'gauge')

  local metric_wifi_station_tx_bitrate = metric('wifi_station_transmit_kilobits_per_second', 'gauge')
  local metric_wifi_station_rx_bitrate = metric('wifi_station_receive_kilobits_per_second', 'gauge')

  local metric_wifi_station_tx_packets = metric("wifi_station_transmit_packets_total","counter")
  local metric_wifi_station_rx_packets = metric("wifi_station_receive_packets_total","counter")

  local metric_wifi_station_tx_bytes = metric('wifi_station_transmit_bytes_total', 'counter')
  local metric_wifi_station_rx_bytes = metric('wifi_station_receive_bytes_total', 'counter')


  local u = ubus.connect()
  local status = u:call("network.wireless", "status", {})
  
  uci:foreach("wireless", "wifi-iface", 
  function(s)
    local ifname = uci:get("wireless", s[".name"], "ifname")
    local iw = iwinfo[iwinfo.type(ifname)]

    local assoclist = iw.assoclist(ifname)
    for mac, station in pairs(assoclist) do
      local ifname = ifname
      local mac = mac
      
      if station.signal and station.signal ~= 0 then
        metric_wifi_station_signal(ifname, mac, station.signal)
      end
      if station.inactive then
        metric_wifi_station_inactive(ifname, mac, station.inactive)
      end
      if station.expected_throughput and station.expected_throughput ~= 0 then
        metric_wifi_station_exp_thr(ifname, mac, station.expected_throughput)
      end
      if station.tx_rate and station.tx_rate ~= 0 then
        metric_wifi_station_tx_bitrate(ifname, mac, station.tx_rate)
      end
      if station.rx_rate and station.rx_rate ~= 0 then
        metric_wifi_station_rx_bitrate(ifname, mac, station.rx_rate)
      end
      metric_wifi_station_tx_packets(ifname, mac, station.tx_packets)
      metric_wifi_station_rx_packets(ifname, mac, station.rx_packets)
      if station.tx_bytes then
        metric_wifi_station_tx_bytes(ifname, mac, station.tx_bytes)
      end
      if station.rx_bytes then
        metric_wifi_station_rx_bytes(ifname, mac, station.rx_bytes)
      end
    end
  end
  )

end

scrape()

uci:close()
